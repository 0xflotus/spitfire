#!/usr/bin/env python

# Copyright 2007 The Spitfire Authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


import logging
import os
import os.path
import sys

import spitfire
from spitfire.compiler import compiler as sptcompiler
from spitfire.compiler import options as sptoptions


def process_file(compiler, filename, options):
  def print_output(*args):
    if options.verbose:
      print >> sys.stderr, ' '.join(args)

  try:
    if options.output_file:
      compiler.write_file = False
      if options.output_file == '-':
        f = sys.stdout
      else:
        f = open(options.output_file, 'w')
    else:
      compiler.write_file = True
    src_code = compiler.compile_file(filename)
    if options.output_file:
      f.write(src_code)
      f.close()
  except Exception, e:
    error_msg = 'Failed processing file: %s' % filename
    if options.verbose:
      logging.exception(error_msg)
    else:
      print >> sys.stderr, error_msg
      print >> sys.stderr, e
    sys.exit(1)


if __name__ == '__main__':
  reload(sys)
  sys.setdefaultencoding('utf8')

  from optparse import OptionParser
  op = OptionParser()
  sptoptions.add_common_options(op)
  (options, args) = op.parse_args()

  if options.version:
    print >> sys.stderr, 'spitfire %s' % spitfire.__version__
    sys.exit(0)

  compiler_args = sptcompiler.Compiler.args_from_optparse(options)
  compiler = sptcompiler.Compiler(**compiler_args)

  for filename in args:
    process_file(compiler, filename, options)
